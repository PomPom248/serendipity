{"version":3,"sources":["images/logo.png","services/auth-service.js","containers/IsLoggedIn.js","services/musician-service.js","components/Musician/MusicianCards.js","services/request-service.js","components/HostPlace/RequestButton.js","components/HostPlace/HostPlaceCards.js","components/Profile/Profile.js","services/host-service.js","components/HostPlace/HostPlaceForm.js","components/HostPlace/HostPlace.js","services/concerts-service.js","components/SearchMap/SearchMap.js","components/Mapbox/Mapbox.js","components/Musician/MusicianForm.js","components/Musician/Musician.js","components/Profile/EditProfile.js","components/Requests/RequestsCards.js","components/Requests/Requests.js","components/Concerts/MyConcerts.js","components/Navbar/Navbar.js","components/Home/Home.js","components/Styles/Buttons.js","components/Signup/Signup.js","components/Login/Login.js","containers/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthService","_this","this","Object","classCallCheck","signup","username","password","email","host","musician","service","post","then","response","console","log","data","login","logout","get","loggedin","edit","axios","create","baseURL","concat","process","withCredentials","IsLoggedIn","props","possibleConstructorReturn","getPrototypeOf","call","auth","state","loading","toLogin","toHome","user","_this2","res","setState","catch","err","_this$state","react_default","a","createElement","Redirect","to","children","Component","MusicianService","new","NEW","formData","FormData","keys","forEach","key","append","headers","Content-Type","musicianID","artistData","originCity","musicStyle","artistDescription","instruments","favouritePlayCity","musicTrack","spotifyAccount","youtubeAccount","image","delete","getOne","getAll","file","MusicianCards","handleDelete","listOfMusicians","index_es","naturalSlideWidth","naturalSlideHeight","visibleSlides","totalSlides","length","className","angle_left_default","angle_right_default","map","i","src","alt","toUpperCase","map_marker_default","toString","replace","href","target","RequestService","hostPlaceID","requestID","hostID","RequestButton","sendRequest","placeID","core_index_es","onClick","type","value","check_default","HostPlaceCards","beautifyDate","date","Date","toDateString","myPlaces","place","listOfPlaces","places","push","availability","placeName","address","clock_o_default","initialTime","finishingTime","capacity","price","HostPlace_RequestButton","_id","Profile","authService","objectSpread","routename","Fragment","Typography_default","variant","color","Link","HostPlaceService","location","hostServiceID","HostPlace","handleFormSubmit","event","preventDefault","concertRequest","latitude","longitude","redirect","clean","update","error","handleChange","e","_e$target","name","defineProperty","_suggestionSelect","result","lat","lng","text","parseFloat","onChangeDate","onChangeTime","onSubmit","react_mapbox_autocomplete_default","publicKey","inputClass","onSuggestionSelect","country","resetSearch","TextField_default","placeholder","onChange","label","InputLabelProps","shrink","fullWidth","Button_default","getAllPlaces","hostPlace","listCopyPlaces","getOnePlace","hostId","myPlace","filter","filteredList","toConsumableArray","queryCity","includes","queryDate","toLowerCase","components_HostPlace_HostPlaceCards","HostPlace_HostPlaceForm","ConcertsService","hostplaceID","musiciainID","setCapacity","going","concertID","notGoing","userID","SearchMap","city","Map","ReactMapboxGl","accessToken","Zoom","mapStyle","height","width","display","styles","center","StyledPopup","styled","div","_templateObject","Mapbox","filterConcerts","newfiltered","allConcerts","concert","searchDate","genre","searchGenre","searchCity","filteredConcerts","markerClick","feature","document","querySelector","style","onClickGoingConcert","onClickNotGoingConcert","closePopup","ConcertService","_this3","SearchMap_SearchMap_SearchMap","zoom","containerStyle","lib_esm","id","layout","icon-image","coordinates","bind","offset","bottom-left","bottom","bottom-right","s","disabled","MusicianForm","handleChangeImage","files","item","multiline","rowsMax","Musician","prop","listCopyMusician","genres","queryInstruments","queryGenre","MusicianCards_MusicianCards","MusicianForm_MusicianForm","EditProfile","checked","control","RequestsCards","componentDidMount","onClickCreateConcert","hostplaceId","musicianId","concertService","concertCreated","requestService","handleDeleteRequests","request","_this$props","Requests","requests","myrequests","listOfRequestsIds","requestList","listOfRequests","alert","Requests_RequestsCards","MyConcerts","prosp","concerts","concertsArr","listOfConcerts","Navbar","Route","exact","path","render","components_Profile_Profile","components_HostPlace_HostPlace","Mapbox_Mapbox_Mapbox","components_Requests_Requests","Musician_Musician_Musician","component","MyConcerts_MyConcerts","Home","IsLoggedIn_IsLoggedIn","components_Navbar_Navbar","ButtonRegister","button","Buttons_templateObject","Signup","Grid_default","direction","spacing","container","alignItems","justify-content","FormControlLabel_default","Switch_default","Login","_event$target","xs","Register","logo","Login_Login","Signup_Signup","App","es_Switch","Register_Register","Home_Home","Boolean","window","hostname","match","ReactDOM","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.691ff694.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.faabf044.png\";","import axios from 'axios';\n\nexport default class AuthService {\n    constructor() {\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n            withCredentials: true\n        });\n        this.service = service;\n    }\n\n    signup = (username, password, email, host, musician) => {\n        return this.service.post('/signup', {\n                username,\n                password,\n                email,\n                host,\n                musician\n            })\n            .then(response => {\n                console.log(response)\n                return response.data\n            })\n    }\n\n    login = (username, password) => {\n        return this.service.post('/login', {\n                username,\n                password\n            })\n            .then(response => response.data)\n    }\n\n    logout = () => {\n        return this.service.get('/logout', {})\n            .then(response => response.data)\n    }\n\n    loggedin = () => {\n        return this.service.get('/loggedin')\n            .then(response => response.data)\n    }\n\n    edit = (username, email, host,musician) => {\n        return this.service.post('/edit', {\n                username,\n                email,\n                host,\n                musician\n            })\n            .then(response => response.data)\n    }\n}","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport AuthService from '../services/auth-service';\n\nexport default class IsLoggedIn extends Component {\n    constructor(props) {\n        super(props);\n        this.auth = new AuthService();\n        this.state = {\n            loading: true,\n            toLogin: false,\n            toHome: false,\n            user: {}\n        };\n    }\n\n    componentDidMount() {\n        this.auth.loggedin()\n            .then((res) => {\n                this.setState({\n                    loading: false,\n                    user: res\n                });\n                // console.log({ res });\n            })\n            .catch((err) => {\n                this.setState({\n                    loading: false,\n                    toLogin: true,\n                });\n                // console.log({ err })\n            })\n    }\n\n    render() {\n        const { user, loading, toLogin, toHome } = this.state;\n\n        if (loading) return <div>Loading...</div>;\n        if (toLogin) return <Redirect to='/register' />;\n        // if (toHome) return <Redirect to='/' />;\n        if (user) return this.props.children(this.state.user);\n    }\n}\n","import axios from 'axios';\nexport default class MusicianService {\n  constructor(props) {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/musician`,\n      withCredentials: true\n    });\n  }\n  new = (NEW) => {\n    const formData = new FormData();\n    Object.keys(NEW).forEach(key => formData.append(key, NEW[key]))\n    return this.service.post(\"/new\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => response.data);\n  }\n  addPicture(file) {\n    const formData = new FormData();\n    formData.append(\"image\", file)\n    return this.service.post(\"/new\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => response.data)\n  }\n\n  edit = (musicianID, artistData, email, originCity, musicStyle, artistDescription, instruments, favouritePlayCity, musicTrack, spotifyAccount, youtubeAccount, image) => {\n    return this.service.post(`/${musicianID}/edit`, {\n      artistData,\n      email,\n      originCity,\n      musicStyle,\n      artistDescription,\n      instruments,\n      favouritePlayCity,\n      musicTrack,\n      spotifyAccount,\n      youtubeAccount,\n      image,\n    })\n      .then(response => response.data);\n  }\n  delete = (musicianID) => {\n    return this.service.get(`/${musicianID}/delete`, {})\n      .then(response => response.data)\n  }\n  getOne = (musicianID) => {\n    return this.service.get(`/${musicianID}`, {})\n      .then(response => response.data)\n  }\n  getAll = () => {\n    return this.service.get('/all')\n      .then(response => response.data)\n  }\n}","import React, { Component } from 'react';\nimport MusicianService from '../../services/musician-service';\nimport LocationIcon from 'react-icons/lib/fa/map-marker'\nimport LeftArrow from 'react-icons/lib/fa/angle-left'\nimport RightArrow from 'react-icons/lib/fa/angle-right'\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nexport default class MusicianCards extends Component {\n    constructor() {\n        super()\n        this.service = new MusicianService();\n    }\n    handleDelete = (res) => {\n        // console.log(response)\n        this.service.delete(res)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n    render() {\n        const listOfMusicians = this.props.musician || [];\n\n        return (\n            <CarouselProvider\n                naturalSlideWidth={60}\n                naturalSlideHeight={80}\n                visibleSlides={3}\n                totalSlides={listOfMusicians.length}>\n                <ButtonBack className='arrows'>\n                    <LeftArrow className='arrow-icon' />\n                </ButtonBack>\n                <ButtonNext className='arrows'><RightArrow className='arrow-icon' /></ButtonNext>\n                <Slider>\n                    <div className='all-card'>\n                        {listOfMusicians.map((musician, i) => {\n                            return (\n                                <Slide>\n                                    <div key={i} className='individual-cards'>\n                                        <img src={musician.image} className='musician-image' alt=\"Artist's image\" />\n                                        <div className='info-container'>\n                                            <h2 className='musician-name'>{musician.artistData.toUpperCase()}</h2>\n                                            <div>\n                                                <LocationIcon /><span className='city'>{musician.originCity.toUpperCase()}</span>\n                                            </div>\n                                            <span className='titles'>MUSIC STYLE </span> <p>    {musician.musicStyle.toString().replace(/,/g, ' / ').toUpperCase()}</p>\n                                            <span className='titles'>INSTRUMENTS </span>  <p>    {musician.instruments.toString().replace(/,/g, ' / ').toUpperCase()}</p>\n                                            <span className='titles'>FAVOURITE PLACE TO PLAY </span> <p>{musician.favouritePlayCity.toUpperCase()}</p>\n                                            <a href={musician.spotifyAccount} target=\"_blank\" className='music-accounts'>SPOTIFY</a>\n                                            <a href={musician.youtubeAccount} target=\"_blank\" className='music-accounts' >YOUTUBE</a>\n                                        </div>\n                                    </div>\n                                </Slide>\n                            )\n                        })}\n                    </div>\n                </Slider>\n            </CarouselProvider >\n\n        );\n    }\n}\n{/* < button type=\"submit\" onClick={() => this.handleDelete(musician._id)}>Delete</button> */ }","import axios from 'axios'\n\nexport default class RequestService {\n    constructor(props) {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/requests`,\n            withCredentials: true\n        });\n    }\n    new = (musicianID, hostPlaceID) => {\n        return this.service.post(`/new/${musicianID}`, { hostPlaceID })\n            .then(response => response.data)\n    }\n    delete = (requestID) => {\n        return this.service.get(`/${requestID}/delete`, {})\n            .then(response => response.data)\n    }\n\n    getOne = (requestID) => {\n        return this.service.get(`/${requestID}`, {})\n            .then(response => response.data)\n    }\n    getAll = (hostID) => {\n        return this.service.get(`/all/${hostID}`, {})\n            .then(response => response.data)\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport RequestService from '../../services/request-service';\nimport { Button } from '@material-ui/core';\nimport FaCheck from \"react-icons/lib/fa/check\";\n\nclass RequestButton extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            placeID: null\n        }\n        this.service = new RequestService()\n\n    }\n    componentDidMount() {\n        this.setState({\n            user: this.props.user,\n            placeID: this.props.placeID\n        })\n    }\n    sendRequest = () => {\n        console.log( this.state)\n        this.service.new(this.props.user.musicianID, this.props.placeID)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n    render() {\n        return (\n            <div> \n                <Button  onClick={this.sendRequest}  type=\"submit\" value=\"Submit\"> <FaCheck/></Button>\n            </div>\n        );\n    }\n}\n\nexport default RequestButton;","import React, { Component } from \"react\";\nimport RequestButton from \"./RequestButton\";\nimport FaClockO from \"react-icons/lib/fa/clock-o\";\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n  ButtonBack,\n  ButtonNext\n} from \"pure-react-carousel\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\nimport \"./HostPlaceCards.css\";\nimport LeftArrow from \"react-icons/lib/fa/angle-left\";\nimport RightArrow from \"react-icons/lib/fa/angle-right\";\n\nclass HostPlaceCards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      myPlaces: null\n    };\n    // console.log(this.props.place);\n\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user,\n      myPlaces: this.props.place\n    });\n  }\n  beautifyDate = date => {\n    console.log(date);\n    const dateConverted = new Date(date);\n    return dateConverted.toDateString();\n  };\n  render() {\n    const listOfPlaces = this.props.places || [];\n    if (this.props.place) {   \n      listOfPlaces.push(this.props.place);\n    }\n    return (\n      <CarouselProvider\n        naturalSlideWidth={200}\n        naturalSlideHeight={130}\n        visibleSlides={3}\n        totalSlides={listOfPlaces.length}\n      >\n        <Slider>\n          {listOfPlaces.map((places, i) => {\n            if (places.availability) {\n              return (\n                <Slide>\n                  <div className=\"card-host-place\">\n                    <div className=\"top-card\">\n                      <div>\n                        <h2>{places.placeName}</h2>\n                        <h1 className=\"address\">{places.address}</h1>\n                      </div>\n                      <div className=\"date-container\">\n                        <h3>\n                          <FaClockO />\n                          {places.initialTime}-{places.finishingTime}\n                        </h3>\n                        <h3>{this.beautifyDate(places.date)}</h3>\n                      </div>\n                    </div>\n                    <hr />\n                    <div className=\"numbers-container\">\n                      <div>\n                        <span className=\"number\">{places.capacity} </span>\n                        <span>CAPACITY</span>\n                      </div>\n                      <div>\n                        <span className=\"number\">{places.price}$ </span>\n                        <span>PRICE</span>\n                      </div>\n                      <div>\n                      {this.props.user.musician && (\n                            <RequestButton\n                              user={this.props.user}\n                              placeID={places._id}\n                            />\n                          )}\n                      </div>\n                    </div>\n                  \n                  </div>\n                </Slide>\n              );\n            }\n          })}\n        </Slider>\n        <ButtonBack>\n          <LeftArrow />\n        </ButtonBack>\n        <ButtonNext>\n          <RightArrow />\n        </ButtonNext>\n      </CarouselProvider>\n    );\n  }\n}\n\nexport default HostPlaceCards;\n","import React, { Component } from \"react\";\nimport AuthService from '../../services/auth-service';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Link } from 'react-router-dom';\nimport MusicianCards from \"../Musician/MusicianCards\";\nimport HostPlaceCards from '../HostPlace/HostPlaceCards'\nclass Profile extends Component {\n\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.authService = new AuthService();\n    this.state = {\n      user: null\n    }\n  }\n  componentDidMount() {\n    this.authService\n      .loggedin()\n      .then(res => { this.setState({ ...this.state, user: res }); console.log(res) })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    // console.log(this.props.user);\n    const { routename } = this.props;\n    return this.state.user ? (\n      <>\n        <Typography variant=\"h6\" color=\"inherit\">\n          {`this is the ${routename}`}\n        </Typography>\n        <div>\n          <h1> Profile Details </h1>\n          <p><span>Username: </span>{this.state.user.username}</p>\n          <p><span>Email: </span>{this.state.user.email}</p>\n          <Link to=\"/edit-profile\"><button>Edit Profile</button></Link>\n        </div>\n      </>\n    ) : (\n        <h1>No logedin</h1>\n      );\n  }\n}\n\nexport default Profile;","import axios from 'axios';\n\nexport default class HostPlaceService {\n    constructor(props) {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/host-place`,\n            withCredentials: true\n        });\n\n    }\n    new = (hostID, address, date, initialTime, finishingTime, price, capacity, location, placeName, hostPlaceID) => {\n        return this.service.post('/new', {\n            hostID,\n            address,\n            date,\n            initialTime,\n            finishingTime,\n            price,\n            capacity,\n            location,\n            placeName,\n            hostPlaceID\n        })\n            .then(response => response.data)\n    }\n\n    edit = (hostServiceID, address, date, initialTime, finishingTime, price, capacity, location, placeName) => {\n        return this.service.post(`/${hostServiceID}/edit`, {\n            address,\n            date,\n            initialTime,\n            finishingTime,\n            price,\n            capacity,\n            location,\n            placeName\n        })\n            .then(response => response.data)\n    }\n    availability = (hostServiceID, availability) => {\n        return this.service.post(`/${hostServiceID}/availability`, { availability })\n            .then(response => response.data)\n    }\n    delete = (hostServiceID) => {\n        return this.service.get(`/${hostServiceID}/delete`, {})\n            .then(response => response.data)\n    }\n    getOne = (hostPlaceID) => {\n        return this.service.get(`/${hostPlaceID}`, {})\n            .then(response => response.data)\n    }\n    // getOne = (userID, hostPlaceID) => {\n    //     return this.service.get(`/${userID}/${hostPlaceID}`, {})\n    //         .then(response => response.data)\n    // }\n    getAll = () => {\n        return this.service.get('/all', {})\n            .then(response => response.data)\n    }\n}","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport HostPlaceService from '../../services/host-service';\nimport TextField from '@material-ui/core/TextField';\nimport MapboxAutocomplete from 'react-mapbox-autocomplete';\nimport './HostPlaceForm.css';\nimport { DateFormatInput} from 'material-ui-next-pickers';\nimport TimeInput from 'material-ui-time-picker'\n\n\nclass HostPlace extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hostID: \"\",\n            address: \"\",\n            date: \"\",\n            initialTime: \"\",\n            finishingTime: \"\",\n            price: \"\",\n            capacity: \"\",\n            location: { latitude: 0, longitude: 0 },\n            placeName: \"\",\n            availability: \"\",\n            concertRequest: \"\",\n            redirect: false,\n            clean: false\n        }\n        this.service = new HostPlaceService();\n    }\n\n    componentDidMount() {\n        this.state.hostID = this.props.user._id\n        console.log(this.state.hostID)\n        // this.setState = ({ hostID: this.props.user._id })\n    }\n\n    handleFormSubmit = (event) => {\n        console.log(event);\n        event.preventDefault();\n\n        const { hostID, address, date, initialTime, finishingTime, price, capacity, location, placeName, availability, concertRequest } = this.state;\n\n        this.service.new(hostID, address, date, initialTime, finishingTime, price, capacity, location, placeName, availability, concertRequest)\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    hostID: \"\",\n                    address: \"\",\n                    date: \"\",\n                    initialTime: \"\",\n                    finishingTime: \"\",\n                    price: \"\",\n                    capacity: \"\",\n                    location: { latitude: 0, longitude: 0 },\n                    placeName: \"\",\n                    redirect: true,\n                    clean: true\n                }, () => {\n                    this.props.update()\n                });\n            })\n            .catch(error => console.log(error))\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n    _suggestionSelect = (result, lat, lng, text) => {\n        console.log(this.state, \"dentro del geocoder\")\n        console.log(result, lat, lng, text);\n        this.state.location.latitude = parseFloat(lat);\n        this.state.location.longitude = parseFloat(lng);\n        this.state.address = result;\n    }\n    onChangeDate = (date: Date) => {\n         console.log('Date: ', date)\n        this.setState({ date })\n    }\n    onChangeTime = (e) => {\n         console.log(e)\n       // this.setState({ time })\n    }\n\n\n    render() {\n        return (\n            <div className=\"form-host-place-box\">\n                <h1>Add your nice Place for a concert</h1>\n                <form onSubmit={this.handleFormSubmit} className=\"form-add-host-place\">\n                        <MapboxAutocomplete publicKey='pk.eyJ1IjoiZGRpZXpyIiwiYSI6ImNqb3ZuMGZ3cjFqa2YzcWxrYjBtNjJzaG4ifQ.cCFZkl39Hov3D-Ujeq74Cg'\n                            inputClass='search-input'\n                            type=\"search\"\n                            onSuggestionSelect={this._suggestionSelect}\n                            country='es'\n                            resetSearch={false} />\n                        <TextField placeholder='Address' type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange} />\n                        <TextField type=\"date\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n                        <TextField label='Starting Time' type=\"time\" name=\"initialTime\" value={this.state.initialTime} onChange={this.handleChange} InputLabelProps={{\n                            shrink: true,\n                        }} /> \n                        <TextField label='Finishing Time' type=\"time\" name=\"finishingTime\" value={this.state.finishingTime} onChange={this.handleChange} InputLabelProps={{\n                            shrink: true,\n                        }} />\n                        <TextField placeholder='Price €/per person' type=\"number\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\n                        <TextField placeholder='Capacity' type=\"number\" name=\"capacity\" value={this.state.capacity} onChange={this.handleChange} />                      \n                        <TextField  fullWidth placeholder='Name' type=\"text\" name=\"placeName\" value={this.state.placeName} onChange={this.handleChange} />\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Create Host Place</Button>\n                </form>\n            </div >\n        );\n    }\n}\n\nexport default HostPlace;\n","import React, { Component } from 'react';\nimport HostPlaceCards from './HostPlaceCards';\nimport HostPlaceForm from './HostPlaceForm'\nimport HostPlaceService from '../../services/host-service';\nimport { TextField } from '@material-ui/core';\nclass HostPlace extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: null,\n            listOfPlaces: null,\n            listCopyPlaces: null,\n            queryDate: '',\n            queryCity: \"\"\n        }\n        this.service = new HostPlaceService()\n    }\n\n    componentDidMount() {\n        this.getAllPlaces();\n        this.getOnePlace(this.props.user._id);\n        this.setState({\n            user: this.props.user\n        })\n    }\n    getAllPlaces = () => {\n        this.service.getAll()\n            .then((response) => {\n                this.setState({\n                    listOfPlaces: response.hostPlace,\n                    listCopyPlaces: response.hostPlace\n                })\n            })\n            .catch((e) => console.log(e))\n    }\n    getOnePlace = (hostId) => {\n        console.log(hostId)\n        this.service.getOne(hostId)\n            .then((response) => {\n                console.log(response,'response')\n                this.setState({\n                    myPlace: response.hostPlace\n                })\n            })\n    }\n    filter = (e) => {\n        e.preventDefault();\n        const { name, value } = e.target\n        this.setState({ [name]: value }, () => {\n            const filtered = [...this.state.listOfPlaces]\n            const filteredList = filtered.filter(place => {\n                if (this.state.queryCity === '') {\n                 console.log('solo fecha')\n                    return place.date.includes(this.state.queryDate)\n                }\n                else if (this.state.queryDate === '') {\n                     console.log('solo ciudad')\n                    return place.address.toLowerCase().includes(this.state.queryCity.toLowerCase())\n                } else {\n                    return place.date.includes(this.state.queryDate) && place.address.toLowerCase().includes(this.state.queryCity.toLowerCase())\n                }\n            })\n            this.setState({\n                listCopyPlaces: filteredList\n            })\n        })\n    }\n    render() {\n        console.log(this.props);\n        \n        return (\n            \n            <>\n                {this.props.user.musician &&\n                    <>\n                        <h1>Search by...</h1>\n                        <form>\n                            <TextField name='queryDate' value={this.state.queryDate} type='date' onChange={this.filter} label='Date' InputLabelProps={{\n                                shrink: true,\n                            }} />\n\n                            <TextField value={this.state.queryCity} name='queryCity' type='text' onChange={this.filter} label='City' InputLabelProps={{\n                                shrink: true,\n                            }} />\n                        </form>\n                    </>}\n                {this.props.user.musician && <HostPlaceCards places={this.state.listCopyPlaces} user={this.props.user} />}\n                {this.props.user.host && <HostPlaceCards place={this.state.myPlace} user={this.props.user} />}\n                {this.props.user.host && <HostPlaceForm update={this.getAllPlaces} user={this.props.user} />}\n            </>\n        );\n    }\n}\n\nexport default HostPlace;","import axios from 'axios';\n\nexport default class ConcertsService {\n    constructor(props) {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/concerts`,\n            withCredentials: true\n        });\n    }\n    new = (hostplaceID, musiciainID) => {\n        return this.service.post(`/new/${hostplaceID}/${musiciainID}`)\n            .then(response => response.data)\n    }\n    setCapacity = (capacity) => {\n        return this.service.post(\"/set-capacity\", { capacity })\n            .then(response => response.data)\n    }\n\n    going = (concertID, capacity) => {\n        return this.service.post(`/${concertID}/going`)\n            .then(response => response.data)\n    }\n\n    notGoing = (concertID, capacity) => {\n        return this.service.post(`/${concertID}/not-going`)\n            .then(response => response.data)\n    }\n    getOne = (userID, concertID) => {\n        return this.service.get(`/${userID}/${concertID}`, {})\n            .then(response => response.data)\n    }\n    getAll = () => {\n        return this.service.get(`/all`, {})\n            .then(response => response.data)\n    }\n    delete = (concertID) => {\n        return this.service.get(`/${concertID}/delete`, {})\n            .then(response => response.data)\n    }\n}","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport './SearchMap.css';\n\nexport default class SearchMap extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            city: ''\n        }\n    }\n  render() {\n    return (\n      <form className=\"form-search-concert\">\n        <h3>Search Concert</h3>\n        <label>Location</label>\n        <hr></hr>\n        <TextField placeholder='Location'  name=\"searchCity\" onChange={(e)=>this.props.filter(e)}/>\n        <br/>\n        <TextField placeholder='Date' type=\"date\" name=\"searchDate\" onChange={(e)=>this.props.filter(e)}/>\n        <label>Genre</label>\n        <TextField  placeholder='Genre'  name=\"searchGenre\" onChange={(e)=>this.props.filter(e)}/>\n      </form>\n    )\n  }\n}\n","import ReactMapboxGl, { Layer, Feature, Popup } from \"react-mapbox-gl\";\nimport React, { Component } from \"react\";\nimport ConcertService from \"../../services/concerts-service\";\nimport SearchMap from \"../SearchMap/SearchMap\";\nimport styled from \"styled-components\";\nimport \"./Mapbox.css\";\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    \"pk.eyJ1IjoiZGRpZXpyIiwiYSI6ImNqb3ZuMGZ3cjFqa2YzcWxrYjBtNjJzaG4ifQ.cCFZkl39Hov3D-Ujeq74Cg\"\n});\nconst Zoom = [5];\nconst mapStyle = { height: \"92vh\", width: \"85vw\", display: \"flex\" };\nconst styles = { dark: \"mapbox://styles/mapbox/dark-v9\" };\nconst center = [-3.70379, 40.416775];\n\nconst StyledPopup = styled.div`\n  background: white;\n  color: #3f618c;\n  font-weight: 400;\n  padding: 5px;\n  border-radius: 2px;\n  width: 30vw;\n`;\n\nexport default class Mapbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      allConcerts: null,\n      filteredConcerts: [],\n      concert: null,\n      searchCity: \"\",\n      searchDate: \"\",\n      searchGenre: \"\"\n    };\n    this.service = new ConcertService();\n  }\n\n  filterConcerts = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    this.setState({ [name]: value }, () => {\n      const filtered = [...this.state.allConcerts];\n      const newfiltered = filtered.filter(concert => {\n        const date = this.state.searchDate.toLowerCase();\n        const genre = this.state.searchGenre.toLowerCase();\n        const city = this.state.searchCity.toLowerCase();\n        if (date === \"\" && genre === \"\") {\n          return concert.hostID.address.toLowerCase().includes(city); //FILTER PLACE NAME\n        } else if (city === \"\" && genre === \"\") {\n          return concert.hostID.date.includes(date); //FILTER DATE\n        } else if (city === \"\" && date === \"\") {\n          return concert.musicianID.musicStyle\n            .toString()\n            .toLowerCase()\n            .includes(genre);\n        } else if (city === \"\") {\n          return (\n            concert.musicianID.musicStyle\n              .toString()\n              .toLowerCase()\n              .includes(genre) && concert.hostID.date.includes(date)\n          );\n        } else if (date === \"\") {\n          return (\n            concert.musicianID.musicStyle\n              .toString()\n              .toLowerCase()\n              .includes(genre) &&\n            concert.hostID.address.toLowerCase().includes(city)\n          );\n        } else if (genre === \"\") {\n          return (\n            concert.hostID.date.includes(date) &&\n            concert.hostID.address.toLowerCase().includes(city)\n          );\n        } else {\n          return (\n            concert.hostID.address.toLowerCase().includes(city) &&\n            concert.hostID.date.includes(date) &&\n            concert.musicianID.musicStyle\n              .toString()\n              .toLowerCase()\n              .includes(genre)\n          );\n        }\n      });\n      this.setState({ filteredConcerts: newfiltered });\n    });\n  };\n\n  componentDidMount() {\n    this.service\n      .getAll()\n      .then(response => {\n        console.log(response);\n        this.setState({\n          allConcerts: [...response],\n          filteredConcerts: [...response]\n        });\n      })\n      .catch(e => console.log(e));\n    this.setState({ user: this.props.user });\n  }\n\n  markerClick = (concert, feature) => {\n    console.log(concert, \"DENTRO DE MARKER CLICK\");\n\n    this.setState(\n      {\n        // center: feature.geometry.coordinates,\n        // zoom: [14],\n        concert\n      },\n      () => (document.querySelector(\".mapboxgl-popup\").style.display = \"flex\")\n    );\n  };\n  onClickGoingConcert = e => {\n    this.service\n      .going(this.state.concert._id)\n      .then(response => {\n        console.log(response.concert);\n        this.setState({\n          concert: response.concert\n        });\n      })\n      .catch(e => console.log(e));\n  };\n  onClickNotGoingConcert = e => {\n    this.service\n      .notGoing(this.state.concert._id)\n      .then(response => {\n        console.log(response.concert);\n        this.setState({\n          concert: response.concert\n        });\n      })\n      .catch(e => console.log(e));\n  };\n  closePopup = e => {\n    console.log(e);\n    document.querySelector(\".mapboxgl-popup\").style.display = \"none\";\n  };\n\n  render() {\n    const { concert } = this.state;\n    // console.log(concert);\n    if (this.state.filteredConcerts) {\n      return (\n        <div className=\"map-container\">\n          <SearchMap filter={this.filterConcerts} />\n          <Map\n            style={styles.dark}\n            zoom={Zoom}\n            containerStyle={mapStyle}\n            center={center}\n          >\n            <Layer\n              type=\"symbol\"\n              id=\"marker\"\n              layout={{ \"icon-image\": \"marker-15\" }}\n            >\n              {this.state.filteredConcerts.map(concert => {\n                return (\n                  <Feature\n                    key={concert}\n                    coordinates={[\n                      concert.hostID.location.longitude,\n                      concert.hostID.location.latitude\n                    ]}\n                    //   onClick={e => this.onClickCircle(e, concert)}\n                    onClick={this.markerClick.bind(this, concert)}\n                  />\n                );\n              })}\n            </Layer>\n            {concert !== null && (\n              <Popup\n                // key={concert.availability}\n                offset={{\n                  \"bottom-left\": [12, -38],\n                  bottom: [0, -38],\n                  \"bottom-right\": [-12, -38]\n                }}\n                coordinates={[\n                  concert.hostID.location.longitude,\n                  concert.hostID.location.latitude\n                ]}\n              >\n                <StyledPopup>\n                    <div className=\"pop-up-container\">\n                      <div>\n                        <button onClick={this.closePopup}>X</button>\n                        <h1>Concert Place in {concert.hostID.placeName}</h1>\n                        <p>Capacidad:{concert.capacity}</p>\n                        <p>{concert.hostID.price}</p>\n                        <p>{concert.hostID.address}</p>\n                        <p>{concert.hostID.date}</p>\n                        <p>{concert.hostID.finishingTime}</p>\n                        <p>{concert.hostID.initialTime}</p>\n                      </div>\n                      <div>\n                        <h1>{concert.musicianID.artistData}</h1>\n                        <div>\n                          {concert.musicianID.musicStyle.map(s => (\n                            <span>{s}</span>\n                          ))}\n                        </div>\n                        <a href={concert.musicianID.musicTrack}>Music Track</a>\n                        <img src={concert.musicianID.image} />\n                        <p>{concert.musicianID.artistData}</p>\n                        <p>{concert.musicianID.instruments[0]}</p>\n                      </div>\n                      <div>\n                      {concert.availability ? (\n                        <button\n                          className=\"btn-go-concert\"\n                          onClick={this.onClickGoingConcert}\n                        >+</button>\n                        ) : (\n                         <button\n                           disabled=\"true\"\n                           className=\"btn-go-concert\"\n                           onClick={this.onClickGoingConcert}\n                         >+</button>\n                        )}\n                        <button\n                          className=\"btn-go-concert\"\n                          onClick={this.onClickNotGoingConcert}\n                        >\n                          -\n                        </button>\n                      </div>\n                    </div>\n                \n                </StyledPopup>\n              </Popup>\n            )}\n          </Map>\n        </div>\n      );\n    } else {\n      return <p>Loading map...</p>;\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport MusicianService from '../../services/musician-service';\nimport { Grid, TextField, Button, } from '@material-ui/core';\n\nexport default class MusicianForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            artistData: \"\",\n            email: \"\",\n            originCity: \"\",\n            musicStyle: \"\",\n            artistDescription: \"\",\n            instruments: \"\",\n            favouritePlayCity: \"\",\n            musicTrack: \"\",\n            spotifyAccount: \"\",\n            youtubeAccount: \"\",\n            image: \"\",\n            file: null,\n            redirect: false\n        }\n        this.service = new MusicianService();\n    }\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const { artistData, email, originCity, musicStyle, artistDescription, instruments, favouritePlayCity, musicTrack, spotifyAccount, youtubeAccount, image, file } = this.state\n        console.log(file)\n        this.service.new({ artistData, email, originCity, musicStyle, artistDescription, instruments, favouritePlayCity, musicTrack, spotifyAccount, youtubeAccount, image, file })\n            .then(response => {\n                this.setState({\n                    artistData: \"\",\n                    email: \"\",\n                    originCity: \"\",\n                    musicStyle: \"\",\n                    artistDescription: \"\",\n                    instruments: \"\",\n                    favouritePlayCity: \"\",\n                    musicTrack: \"\",\n                    spotifyAccount: \"\",\n                    youtubeAccount: \"\",\n                    image: \"\",\n                    file: null,\n                    redirect: true\n                }, () => {\n                    this.props.update()\n                })\n            })\n            .catch(e => console.log(e))\n\n    }\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        })\n    }\n    handleChangeImage = (e) => {\n        this.setState({\n            file: e.target.files[0]\n        })\n        console.log(e.target.files[0]);\n    }\n    render() {\n        return (\n            <div>\n                <h1>Musician's Information</h1>\n                <form onSubmit={this.handleFormSubmit}>\n                    <Grid>\n                        <Grid item>\n                            <TextField placeholder='Artist Name' text='text' name='artistData' value={this.state.artistData} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Home City' text='text' name='originCity' value={this.state.originCity} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Music Style' text='text' name='musicStyle' value={this.state.musicStyle} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Tell us About You' text='text' name='artistDescription' value={this.state.artistDescription} onChange={this.handleChange} multiline\n                                rowsMax=\"6\" />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Instruments' text='text' name='instruments' value={this.state.instruments} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Favourite City to Play' text='text' name='favouritePlayCity' value={this.state.favouritePlayCity} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Music Track' text='text' name='musicTrack' value={this.state.musicTrack} onChange={this.handleChange} />\n                        </Grid>\n                        <h3>Optional</h3>\n                        <Grid item>\n                            <TextField placeholder='Spotify Account' text='text' name='spotifyAccount' value={this.state.spotifyAccount} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Youtube Account' text='text' name='youtubeAccount' value={this.state.youtubeAccount} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <input type=\"file\" name=\"image\" onChange={this.handleChangeImage} />\n                        </Grid>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Save</Button>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport MusicianForm from './MusicianForm';\nimport MusicianCards from './MusicianCards';\nimport \"./Musician.css\"\nimport MusicianService from '../../services/musician-service';\nimport { TextField } from '@material-ui/core';\n\n\nexport default class Musician extends Component {\n    constructor(prop) {\n        super(prop)\n        this.state = {\n            user: null,\n            listOfMusicians: null,\n            listCopyMusician: null,\n            queryGenre: '',\n            queryInstruments: ''\n        }\n        this.service = new MusicianService\n    }\n\n    componentDidMount() {\n        this.update();\n        this.setState({\n            user: this.props.user\n        })\n    }\n    update = () => {\n        this.service.getAll()\n            .then((response) => {\n                // console.log(response.musician)\n                this.setState({\n                    listOfMusicians: response.musician,\n                    listCopyMusician: response.musician\n                }, () => { console.log(this.state) }\n                )\n            })\n            .catch((e) => console.log(e))\n    }\n\n    filter = (e) => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        this.setState({ [name]: value }, () => {\n            const filtered = [...this.state.listOfMusicians]\n            const filteredList = filtered.filter(musician => {\n\n                const instruments = musician.instruments.toString().toLowerCase()\n                const genres = musician.musicStyle.toString().toLowerCase()\n                const queryInstruments = this.state.queryInstruments.toLowerCase()\n                const queryGenre = this.state.queryGenre.toLowerCase()\n\n                if (this.state.queryGenre === '') {\n                    return instruments.includes(queryInstruments)\n                }\n                else if (this.state.queryInstruments === '') {\n                    return genres.includes(queryGenre)\n                } else {\n                    return instruments.includes(queryInstruments) && genres.includes(queryGenre)\n                }\n            })\n            this.setState({\n                listCopyMusician: filteredList\n            })\n        });\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Search by...</h1>\n                <form>\n                    <TextField name='queryGenre' value={this.state.queryGenre} type='text' onChange={this.filter} label='Genre' InputLabelProps={{\n                        shrink: true,\n                    }} />\n\n                    <TextField value={this.state.queryInstruments} name='queryInstruments' type='text' onChange={this.filter} label='Instruments' InputLabelProps={{\n                        shrink: true,\n                    }} />\n                </form>\n                <MusicianCards musician={this.state.listCopyMusician} />\n                {this.props.user.musician && <MusicianForm update={this.update} />}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport AuthService from '../../services/auth-service';\nimport { Grid, TextField, FormControlLabel, Switch, Button } from '@material-ui/core';\n\nexport default class EditProfile extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            email: \"\",\n            host: \"\",\n            musician: \"\",\n        }\n        this.service = new AuthService()\n    }\n    handleChange = (e) => {\n        const { name, value, checked } = e.target;\n        if (name === \"host\" || name === \"musician\") {\n            this.setState({ [name]: checked });\n        } else {\n            this.setState({ [name]: value });\n        }\n    }\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n        const { username, password, email, host, musician } = this.state;\n        this.service.edit(username, password, email, host, musician)\n            .then(response => {\n                console.log(response);\n                // this.setState({ username: \"\", password: \"\", email: \"\", host: \"\", musician: \"\", redirect: true });\n            })\n            .catch(error => console.log(error))\n    }\n    render() {\n        return (\n            <div>\n                <h1>Edit your Profile</h1>\n                <form onSubmit={this.handleFormSubmit}>\n                    <Grid>\n                        <Grid item>\n                            <TextField placeholder='Change your Username' text='text' name='username' value={this.state.username} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Change your Email' text='email' name='email' value={this.state.email} onChange={this.handleChange} />\n                        </Grid>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    onChange={this.handleChange}\n                                    value={this.state.host}\n                                    checked={this.state.host}\n                                    color=\"primary\"\n                                    name=\"host\"\n                                />\n                            }\n                            label=\"Do you wanna Host?\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    onChange={this.handleChange}\n                                    value={this.state.musician}\n                                    checked={this.state.musician}\n                                    color=\"primary\"\n                                    name=\"musician\"\n                                />\n                            }\n                            label=\"Are you musician?\"\n                        />\n                    </Grid>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Edit</Button>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport RequestService from '../../services/request-service';\nimport ConcertService from '../../services/concerts-service';\n\nclass RequestsCards extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            requestID: {}\n        }\n        this.concertService = new ConcertService();\n        this.requestService = new RequestService();\n        console.log(this.props.request, \"DENTRO DE LA CARD\");\n    }\n\n    componentDidMount = () => {\n        this.setState({ user: this.props.user })\n\n    }\n    onClickCreateConcert = (hostplaceId, musicianId, requestID) => {\n\n        this.concertService.new(hostplaceId, musicianId)\n            .then((concertCreated) => {\n                console.log(concertCreated);\n            })\n            .catch((e) => {\n                console.log(e);\n            })\n        this.requestService.delete(requestID)\n            .then(requestID => console.log(requestID))\n            .catch(err => console.log(err))\n    }\n    handleDeleteRequests = (requestID) => {\n\n        this.requestService.delete(requestID)\n            .then(requestID => console.log(requestID))\n            .catch(err => console.log(err))\n    }\n    render() {\n\n        const musicianID = this.props.request.musicianID\n        const { user, request } = this.props\n        console.log(this.props.request.musicianID, this.props);\n        \n        return (\n            <div>\n                <p>{musicianID.artistData} wants to play at yout nice Place!</p>\n                <p>{musicianID.artistData}</p>\n                <p>{musicianID.favouritePlayCity}</p>\n                <p>{musicianID.instruments}</p>\n                <p>{musicianID.musicStyle}</p>\n                <button type=\"submit\" onClick={() => this.onClickCreateConcert(user.hostPlaceID, musicianID._id, request._id)}>Accept Request</button>\n                <button type=\"submit\" onClick={() => this.handleDeleteRequests(request._id)}>Deny Request</button>\n            </div>\n        );\n    }\n}\n\nexport default RequestsCards;\n","import React, { Component } from \"react\";\nimport RequestsCards from \"./RequestsCards\";\nimport RequestService from \"../../services/request-service\";\n\nclass Requests extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      listOfRequests: []\n    };\n    this.service = new RequestService();\n  }\n  componentDidMount = () => {\n    this.setState({ user: this.props.user });\n    this.getAll(this.props.user._id);\n  };\n\n  getAll = hostId => {\n    this.service.getAll(hostId).then(requests => {\n      // console.log(requests.myrequests.concertRequest,'requests');\n\n      if (requests.myrequests) {\n        const listOfRequestsIds = requests.myrequests.concertRequest;\n        // console.log(listOfRequestsIds);\n        const requestList = [];\n        listOfRequestsIds.forEach((request) => {\n          this.service.getOne(request._id)\n            .then(request => {\n              requestList.push(request.request);\n              this.setState({ listOfRequests: requestList })\n              console.log(requestList);\n            })\n        })\n        // console.log(requestList);\n\n      } else {\n        alert(\"Este host no tiene requests limpiar codifgo\");\n      }\n\n    });\n  };\n\n  render() {\n    const listOfRequests = this.state.listOfRequests;\n    return (\n      <>\n        {listOfRequests.map((request, i) => { return (<RequestsCards key={i} request={request} user={this.props.user} />) })}\n      </>\n    );\n  }\n}\n\nexport default Requests;\n","import React, { Component } from 'react';\nimport ConcertsService from '../../services/concerts-service';\nimport { Card } from \"@material-ui/core\";\n\nexport default class MyConcerts extends Component {\n    constructor(prosp) {\n        super(prosp)\n        this.state = {\n            user: null,\n            listOfConcerts: null\n        }\n        this.service = new ConcertsService()\n    }\n    componentDidMount = () => {\n        this.setState({\n            user: this.props.user\n        })\n        this.getOne(this.props.user._id, this.props.user.concerts)\n    }\n    getOne = (userID, concertID) => {\n        const concertsArr = []\n        for (var i = 0; i < concertID.length; i++) {\n            this.service.getOne(userID, concertID[i])\n                .then((concert) => {\n                    // console.log(concert)\n                    concertsArr.push(concert)\n\n                    this.setState({\n                        listOfConcerts: concertsArr\n                    })\n                })\n        }\n    }\n\n    beautifyDate = (date) => {\n        const dateConverted = new Date(date);\n        return dateConverted.toDateString();\n    }\n    render() {\n\n        const listOfConcerts = this.state.listOfConcerts || [];\n        console.log(listOfConcerts)\n\n\n        return (\n\n            <div>\n                <h1>Your Concerts</h1>\n                {listOfConcerts.map((concert, i) => {\n                    return (\n                        <>\n                            <Card key={i} className=\"card-host-place\">\n                                <h3>{concert.hostID.placeName}</h3>\n                                <h4>{concert.hostID.address}</h4>\n                                <h4>{concert.hostID.initialTime}h</h4>\n                                <h4>{concert.hostID.finishingTime}h</h4>\n                                <h4>Date: {this.beautifyDate(concert.hostID.date)}</h4>\n                                <div className=\"numbers-container\">\n                                    <span>CAPACITY</span><span className=\"number\">{concert.hostID.capacity} </span>\n                                    <span>PRICE</span><span className=\"number\">{concert.hostID.price} </span>\n                                </div>\n                                <h3>{concert.musicianID.artistData}</h3>\n                                <a href={concert.musicianID.musicTrack}>Music Track</a>\n                                {/* <h4>{concert.musicianID}</h4> */}\n                            </Card>\n                        </>\n                    )\n                })}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { Route } from 'react-router-dom';\nimport Profile from '../Profile/Profile';\nimport AuthService from '../../services/auth-service';\nimport HostPlace from '../HostPlace/HostPlace';\nimport Mapbox from '../Mapbox/Mapbox';\nimport Musician from '../Musician/Musician';\nimport EditProfile from '../Profile/EditProfile';\nimport Requests from '../Requests/Requests'\nimport './Navbar.css'\nimport MyConcerts from '../Concerts/MyConcerts';\n\nclass Navbar extends Component {\n    constructor() {\n        super()\n        this.authService = new AuthService();\n        this.state = {\n            user: null\n        }\n    }\n    logout = () => {\n        this.authService\n            .logout()\n            .then(() => this.setState({ user: null }));\n    }\n    render() {\n        // console.log(this.props.user);\n        return (\n            <>\n                <nav className=\"nav-bar-guay\"> \n                        <span className=\"nav-title\">\n                            SERENDIPITY\n                        </span>\n                        {(this.props.user.musician || this.props.user.host) ?\n                            <>\n                                <Link to='/musicians'>\n                                    <Button>Musician</Button>\n                                </Link>\n                                <Link to=\"/host-places\">\n                                    <Button>Host</Button>\n                                </Link>\n                            </>\n                            : null\n                        }\n                        {(this.props.user.host) ?\n                            <>\n                                <Link to='/requests'>\n                                    <Button>Request</Button>\n                                </Link>\n                            </> : null}\n                        <Link to='/concerts'>\n                            <Button>Concert</Button>\n                        </Link>\n                        <Link to=\"/your-concerts\">\n                            <Button>Your Concerts</Button>\n                        </Link>\n                        <Link to='/about'>\n                            <Button>About</Button>\n                        </Link>\n                        <Link to='/profile'>\n                            <Button>Profile</Button>\n                        </Link>\n                        <Link to='/register'>\n                            <Button onClick={this.logout}>Logout</Button>\n                        </Link>\n                </nav>\n                <Route exact path=\"/about\" render={() => <Profile routename='about' />} />\n                <Route exact path=\"/profile\" render={() => <Profile user={this.props.user} routename='profile' />} />\n                <Route exact path=\"/host-places\" render={() => <HostPlace user={this.props.user} />} />\n                <Route exact path=\"/concerts\" render={() => <Mapbox user={this.props.user} />} />\n                <Route exact path=\"/requests\" render={() => <Requests user={this.props.user} />} />\n                <Route exact path='/musicians' render={() => <Musician user={this.props.user} routename='musician' />} />\n                <Route exact path='/edit-profile' component={EditProfile} />\n                <Route exact path='/your-concerts' render={() => <MyConcerts user={this.props.user} />} />\n            </>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react'\nimport IsLoggedIn from '../../containers/IsLoggedIn';\nimport AuthService from '../../services/auth-service';\nimport Navbar from '../Navbar/Navbar';\n\n\nexport default class Home extends Component {\n  constructor() {\n    super()\n    this.authService = new AuthService();\n    this.state = {\n      user: null\n    }\n  }\n  logout = () => {\n    this.authService\n      .logout()\n      .then(() => this.setState({ user: null }));\n  }\n  \n  render() {\n\n    return (\n      <IsLoggedIn>\n        {(user) => {\n          // const username = user && user.username;\n          return (\n            <>\n              <Navbar user={user}></Navbar>\n            </>\n          );\n        }}\n      </IsLoggedIn>\n    )\n  }\n}","import styled from 'styled-components';\nexport const ButtonRegister = styled.button`\n    background-color: #a56f91;;\n    min-height: 32px;\n    padding: 8px 16px;\n    border-radius: 3px;\n    font-size:15px;\n`;","import React, { Component } from 'react'\nimport AuthService from '../../services/auth-service'\nimport { Redirect } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport {ButtonRegister} from '../Styles/Buttons'\n\n\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '', password: '', email: '', host: false, musician: false, redirect: false\n    }\n    this.service = new AuthService();\n  }\n\n\n    handleFormSubmit = (event) => {\n        console.log(event);\n        event.preventDefault();\n        const {username,password,email,host,musician} = this.state;\n        this.service.signup(username,password,email,host,musician)\n        .then( response => {\n            console.log(response);\n            this.setState({username: \"\", password: \"\",email: \"\",host:false,musician:false,redirect:true});\n        })\n        .catch( error => console.log(error) )\n    }\n\n  handleChange = (e) => {\n    const { name, value, checked } = e.target;\n    if (name === \"host\" || name === \"musician\") {\n      this.setState({ [name]: checked });\n    } else {\n      this.setState({ [name]: value });\n    }\n    console.log(this.state)\n  }\n\n\n  render() {\n    if (this.state && this.state.redirect) { return <Redirect to=\"/\" /> }\n\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <Grid direction='column' spacing={16} container alignItems='center'justify-content='center' >\n          <Grid item>\n            <TextField  placeholder='Name' type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n          </Grid>\n          <Grid item>\n            <TextField placeholder='password' type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n          </Grid>\n          <Grid item>\n            <TextField placeholder='email' type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n          </Grid>\n          </Grid> \n          <Grid direction='column' spacing={16} container alignItems='center'justify-content='center' >\n          <FormControlLabel\n            control={\n              <Switch\n                onChange={this.handleChange}\n                value={this.state.host}\n                checked={this.state.host}\n                color=\"primary\"\n                name=\"host\"\n              />\n            }\n            label=\"Do you wanna Host?\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                onChange={this.handleChange}\n                value={this.state.musician}\n                checked={this.state.musician}\n                color=\"primary\"\n                name=\"musician\"\n              />\n            }\n            label=\"Are you musician?\"\n          />\n          <Grid item>\n            <ButtonRegister variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">SIGNUP</ButtonRegister>\n          </Grid>\n        </Grid>\n      </form>\n    )\n  }\n}","import React, { Component } from 'react';\nimport AuthService from '../../services/auth-service';\nimport { Link, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport {ButtonLogin, ButtonRegister} from '../Styles/Buttons'\n\n\nexport default class Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' ,redirect:false};\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const {username,password} = this.state;\n\n    this.service.login(username, password)\n    .then( response => {\n        this.setState({ username: \"\", password: \"\" ,redirect:true});\n    })\n    .catch( error => console.log(error) )\n  }\n    \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n    \n  render(){\n    if(this.state && this.state.redirect){return <Redirect to =\"/\"/>}\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n        <Grid direction='column' spacing={16} container \n        alignItems=\"center\" >\n        <Grid  item xs={12}>\n          <TextField placeholder='Name' type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n        </Grid>\n        <Grid item>\n          <TextField placeholder='password' type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n        </Grid>\n        <Grid item>\n        <ButtonRegister type=\"submit\" value=\"Login\">LOGIN</ButtonRegister>\n        </Grid>\n        </Grid>\n        </form>\n      </div>\n    )\n  }\n}","import Signup from \"../components/Signup/Signup\";\nimport Login from \"../components/Login/Login\";\nimport React, { Component } from \"react\";\nimport logo from'../images/logo.png';\nimport \"./Register.css\";\n\nexport default class Register extends Component {\n  render() {\n    return (\n      <div>\n        <img src={logo} alt=\"\"/>\n        <h1>Serendipity</h1>\n        <div className=\"register-container\">\n          <div className=\"login-box\">\n            <h3>LOGIN</h3>\n            <Login />\n          </div>\n          <div className=\"signup-box\">\n            <h3>SIGNUP</h3>\n            <Signup />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/Home/Home';\nimport Register from './containers/Register';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/register\" render={() => <Register />} />\n          <Route path=\"/\" render={() => <Home />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render((\n  <Router>\n      <App />\n  </Router>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}