{"version":3,"sources":["images/logo.png","services/auth-service.js","containers/IsLoggedIn.js","components/Profile/Profile.js","services/request-service.js","components/HostPlace/RequestButton.js","components/HostPlace/HostPlaceCards.js","services/host-service.js","components/HostPlace/HostPlaceForm.js","components/HostPlace/HostPlace.js","services/concerts-service.js","components/SearchMap/SearchMap.js","components/Mapbox/Mapbox.js","services/musician-service.js","components/Musician/MusicianForm.js","components/Musician/MusicianCards.js","components/Musician/Musician.js","components/Profile/EditProfile.js","components/Requests/RequestsCards.js","components/Requests/Requests.js","components/Navbar/Navbar.js","components/Home/Home.js","components/Signup/Signup.js","components/Login/Login.js","containers/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthService","_this","this","Object","classCallCheck","signup","username","password","email","host","musician","service","post","then","response","data","login","logout","get","loggedin","edit","axios","create","baseURL","concat","process","withCredentials","IsLoggedIn","props","possibleConstructorReturn","getPrototypeOf","call","auth","state","loading","toLogin","toHome","user","_this2","res","setState","catch","err","_this$state","react_default","a","createElement","Redirect","to","children","Component","Profile","console","log","authService","objectSpread","routename","Fragment","Typography_default","variant","color","Link","RequestService","new","musicianID","hostPlaceID","delete","requestID","getOne","getAll","hostID","RequestButton","sendRequest","placeID","index_es","onClick","type","value","HostPlaceCards","beautifyDate","date","Date","toDateString","listOfPlaces","places","place","push","className","map","i","key","placeName","address","initialTime","finishingTime","capacity","price","HostPlace_RequestButton","_id","HostPlaceService","location","hostServiceID","availability","filter","HostPlace","handleFormSubmit","event","preventDefault","concertRequest","latitude","longitude","redirect","clean","update","error","handleChange","e","_e$target","target","name","defineProperty","_suggestionSelect","result","lat","lng","text","parseFloat","onChangeDate","onSubmit","react_mapbox_autocomplete_default","publicKey","inputClass","onSuggestionSelect","country","resetSearch","TextField_default","placeholder","onChange","dist","autoOk","label","InputLabelProps","shrink","fullWidth","Button_default","getAllPlaces","hostPlace","listCopy","getOnePlace","hostId","myPlace","filterDate","filteredList","toConsumableArray","includes","filterCity","queryCity","queryDate","components_HostPlace_HostPlaceCards","HostPlace_HostPlaceForm","ConcertsService","hostplaceID","musiciainID","setCapacity","going","concertID","notGoing","SearchMap","city","Map","ReactMapboxGl","accessToken","Zoom","mapStyle","height","width","display","styles","center","StyledPopup","styled","div","_templateObject","Mapbox","filterConcerts","newfiltered","allConcerts","concert","filteredConcerts","markerClick","feature","onClickGoingConcert","onClickNotGoingConcert","ConcertService","_this3","SearchMap_SearchMap","style","zoom","containerStyle","lib_esm","id","layout","icon-image","coordinates","bind","artistData","href","musicTrack","src","image","instruments","MusicianService","NEW","formData","FormData","keys","forEach","append","headers","Content-Type","originCity","musicStyle","artistDescription","favouritePlayCity","spotifyAccount","youtubeAccount","file","MusicianForm","handleChangeImage","files","item","multiline","rowsMax","MusicianCards","handleExpandClick","expanded","handleDelete","listOfMusicians","component","aria-label","ExpandMore_default","in","timeout","unmountOnExit","align","Musician","prop","MusicianCards_MusicianCards","MusicianForm_MusicianForm","EditProfile","checked","control","RequestsCards","componentDidMount","onClickCreateConcert","hostplaceId","musicianId","concertService","concertCreated","requestService","handleDeleteRequests","request","_this$props","Requests","requests","myrequests","listOfRequestsIds","requestList","listOfRequests","alert","Requests_RequestsCards","Navbar","AppBar_default","position","Toolbar_default","Route","exact","path","render","components_Profile_Profile","components_HostPlace_HostPlace","Mapbox_Mapbox","components_Requests_Requests","Musician_Musician_Musician","Home","IsLoggedIn_IsLoggedIn","components_Navbar_Navbar","Signup","Grid_default","direction","spacing","container","alignItems","justify-content","FormControlLabel_default","Switch_default","Login","_event$target","xs","Register","logo","alt","Login_Login","Signup_Signup","App","es_Switch","Register_Register","Home_Home","Boolean","window","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcfe3fe9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.faabf044.png\";","import axios from 'axios';\n\nexport default class AuthService {\n    constructor() {\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n            withCredentials: true\n        });\n        this.service = service;\n    }\n\n    signup = (username, password, email, host, musician) => {\n        return this.service.post('/signup', {\n                username,\n                password,\n                email,\n                host,\n                musician\n            })\n            .then(response => response.data)\n    }\n\n    login = (username, password) => {\n        return this.service.post('/login', {\n                username,\n                password\n            })\n            .then(response => response.data)\n    }\n\n    logout = () => {\n        return this.service.get('/logout', {})\n            .then(response => response.data)\n    }\n\n    loggedin = () => {\n        return this.service.get('/loggedin')\n            .then(response => response.data)\n    }\n\n    edit = (username, email, host,musician) => {\n        return this.service.post('/edit', {\n                username,\n                email,\n                host,\n                musician\n            })\n            .then(response => response.data)\n    }\n}","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport AuthService from '../services/auth-service';\n\nexport default class IsLoggedIn extends Component {\n    constructor(props) {\n        super(props);\n        this.auth = new AuthService();\n        this.state = {\n            loading: true,\n            toLogin: false,\n            toHome: false,\n            user: {}\n        };\n    }\n\n    componentDidMount() {\n        this.auth.loggedin()\n            .then((res) => {\n                this.setState({\n                    loading: false,\n                    user: res\n                });\n                // console.log({ res });\n            })\n            .catch((err) => {\n                this.setState({\n                    loading: false,\n                    toLogin: true,\n                });\n                // console.log({ err })\n            })\n    }\n\n    render() {\n        const { user, loading, toLogin, toHome } = this.state;\n\n        if (loading) return <div>Loading...</div>;\n        if (toLogin) return <Redirect to='/register' />;\n        // if (toHome) return <Redirect to='/' />;\n        if (user) return this.props.children(this.state.user);\n    }\n}\n","import React, { Component } from \"react\";\nimport AuthService from '../../services/auth-service';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Link } from 'react-router-dom';\nclass Profile extends Component {\n\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.authService = new AuthService();\n    this.state = {\n      user: null\n    }\n  }\n  componentDidMount() {\n    this.authService\n      .loggedin()\n      .then(res => { this.setState({ ...this.state, user: res }); console.log(res) })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    // console.log(this.props.user);\n    const { routename } = this.props;\n    return this.state.user ? (\n      <>\n        <Typography variant=\"h6\" color=\"inherit\">\n          {`this is the ${routename}`}\n        </Typography>\n        <div>\n          <h1> Profile Details </h1>\n          <p><span>Username: </span>{this.state.user.username}</p>\n          <p><span>Email: </span>{this.state.user.email}</p>\n          <Link to=\"/edit-profile\"><button>Edit Profile</button></Link>\n        </div>\n      </>\n    ) : (\n        <h1>No logedin</h1>\n      );\n  }\n}\n\nexport default Profile;","import axios from 'axios'\n\nexport default class RequestService {\n    constructor(props) {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/requests`,\n            withCredentials: true\n        });\n    }\n    new = (musicianID, hostPlaceID) => {\n        return this.service.post(`/new/${musicianID}`, { hostPlaceID })\n            .then(response => response.data)\n    }\n    delete = (requestID) => {\n        return this.service.get(`/${requestID}/delete`, {})\n            .then(response => response.data)\n    }\n\n    getOne = (requestID) => {\n        return this.service.get(`/${requestID}`, {})\n            .then(response => response.data)\n    }\n    getAll = (hostID) => {\n        return this.service.get(`/all/${hostID}`, {})\n            .then(response => response.data)\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport RequestService from '../../services/request-service';\nimport { Button } from '@material-ui/core';\n\nclass RequestButton extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            placeID: null\n        }\n        this.service = new RequestService()\n\n    }\n    componentDidMount() {\n        this.setState({\n            user: this.props.user,\n            placeID: this.props.placeID\n        })\n    }\n    sendRequest = () => {\n        console.log( this.state.placeID)\n        this.service.new(this.props.user.musicianID, this.props.placeID)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n    render() {\n        return (\n            <div>\n                <Button onClick={this.sendRequest} variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Request</Button>\n            </div>\n        );\n    }\n}\n\nexport default RequestButton;","import React, { Component } from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport RequestButton from \"./RequestButton\";\nimport \"./HostPlaceCards.css\";\n\nclass HostPlaceCards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n  }\n  beautifyDate= (date)=>{\n      const dateConverted = new Date(date);\n      return dateConverted.toDateString();\n  }\n  render() {\n   \n    const listOfPlaces = this.props.places || [];\n    if(this.props.place){listOfPlaces.push(this.props.place)}\n    return (\n      <div className=\"host-places-cards-container\">\n        {listOfPlaces.map((places,i) => {\n          return (\n            <Card key={i} className=\"card-host-place\">\n              <h3>{places.placeName}</h3>\n              <h4>{places.address}</h4>\n              <h4>{places.initialTime}h</h4>\n              <h4>{places.finishingTime}h</h4>\n              <h4>Date: {this.beautifyDate(places.date)}</h4>\n              <div className=\"numbers-container\">\n                <span className=\"number\">{places.capacity} </span><span>CAPACITY</span>\n                <span className=\"number\">{places.price} </span><span>PRICE</span>\n              </div>\n              {this.props.user.musician && (\n                <RequestButton user={this.props.user} placeID={places._id} />\n              )}\n            </Card>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default HostPlaceCards;","import axios from 'axios';\n\nexport default class HostPlaceService {\n    constructor(props) {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/host-place`,\n            withCredentials: true\n        });\n\n    }\n    new = (hostID, address, date, initialTime, finishingTime, price, capacity, location, placeName, hostPlaceID) => {\n        return this.service.post('/new', {\n            hostID,\n            address,\n            date,\n            initialTime,\n            finishingTime,\n            price,\n            capacity,\n            location,\n            placeName,\n            hostPlaceID\n        })\n            .then(response => response.data)\n    }\n\n    edit = (hostServiceID, address, date, initialTime, finishingTime, price, capacity, location, placeName) => {\n        return this.service.post(`/${hostServiceID}/edit`, {\n            address,\n            date,\n            initialTime,\n            finishingTime,\n            price,\n            capacity,\n            location,\n            placeName\n        })\n            .then(response => response.data)\n    }\n    availability = (hostServiceID, availability) => {\n        return this.service.post(`/${hostServiceID}/availability`, { availability })\n            .then(response => response.data)\n    }\n    delete = (hostServiceID) => {\n        return this.service.get(`/${hostServiceID}/delete`, {})\n            .then(response => response.data)\n    }\n    filter = (date) => {\n        return this.service.get(`/filtered`, { date })\n            .then(response => response.data)\n    }\n    getOne = (hostServiceID) => {\n        return this.service.get(`/${hostServiceID}`, {})\n            .then(response => response.data)\n    }\n    getAll = () => {\n        return this.service.get('/all', {})\n            .then(response => response.data)\n    }\n}","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport HostPlaceService from '../../services/host-service';\nimport TextField from '@material-ui/core/TextField';\nimport MapboxAutocomplete from 'react-mapbox-autocomplete';\nimport './HostPlaceForm.css';\nimport { DateFormatInput} from 'material-ui-next-pickers'\n\nclass HostPlace extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hostID: \"\",\n            address: \"\",\n            date: \"\",\n            initialTime: \"\",\n            finishingTime: \"\",\n            price: \"\",\n            capacity: \"\",\n            location: { latitude: 0, longitude: 0 },\n            placeName: \"\",\n            availability: \"\",\n            concertRequest: \"\",\n            redirect: false,\n            clean: false\n        }\n        this.service = new HostPlaceService();\n    }\n\n    componentDidMount() {\n        this.state.hostID = this.props.user._id\n        console.log(this.state.hostID)\n        // this.setState = ({ hostID: this.props.user._id })\n    }\n\n    handleFormSubmit = (event) => {\n        console.log(event);\n        event.preventDefault();\n\n        const { hostID, address, date, initialTime, finishingTime, price, capacity, location, placeName, availability, concertRequest } = this.state;\n\n        // console.log(\"hostID is\", hostID)\n\n        this.service.new(hostID, address, date, initialTime, finishingTime, price, capacity, location, placeName, availability, concertRequest)\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    hostID: \"\",\n                    address: \"\",\n                    date: \"\",\n                    initialTime: \"\",\n                    finishingTime: \"\",\n                    price: \"\",\n                    capacity: \"\",\n                    location: { latitude: 0, longitude: 0 },\n                    placeName: \"\",\n                    redirect: true,\n                    clean: true\n                }, () => {\n                    this.props.update()\n                });\n            })\n            .catch(error => console.log(error))\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n    _suggestionSelect = (result, lat, lng, text) => {\n        console.log(this.state, \"dentro del geocoder\")\n        console.log(result, lat, lng, text);\n        this.state.location.latitude = parseFloat(lat);\n        this.state.location.longitude = parseFloat(lng);\n        this.state.address = result;\n    }\n    onChangeDate = (date: Date) => {\n        // console.log('Date: ', date)\n        this.setState({ date })\n    }\n\n    render() {\n        return (\n            <div className=\"form-host-place-box\">\n                <h1>Add your nice Place for a concert</h1>\n                <form onSubmit={this.handleFormSubmit} className=\"form-add-host-place\">\n                        <MapboxAutocomplete publicKey='pk.eyJ1IjoiZGRpZXpyIiwiYSI6ImNqb3ZuMGZ3cjFqa2YzcWxrYjBtNjJzaG4ifQ.cCFZkl39Hov3D-Ujeq74Cg'\n                            inputClass='search-input'\n                            type=\"search\"\n                            onSuggestionSelect={this._suggestionSelect}\n                            country='es'\n                            resetSearch={false} />\n                        <TextField placeholder='Address' type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange} />\n                        <DateFormatInput type=\"date\" name=\"date\" value={this.state.date} onChange={this.onChangeDate} autoOk={true} />\n                        <TextField label='Starting Time' type=\"time\" name=\"initialTime\" value={this.state.initialTime} onChange={this.handleChange} InputLabelProps={{\n                            shrink: true,\n                        }} />\n                        <TextField label='Finishing Time' type=\"time\" name=\"finishingTime\" value={this.state.finishingTime} onChange={this.handleChange} InputLabelProps={{\n                            shrink: true,\n                        }} />\n                        <TextField placeholder='Price €/per person' type=\"text\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\n                        <TextField placeholder='Capacity' type=\"number\" name=\"capacity\" value={this.state.capacity} onChange={this.handleChange} />                      \n                        <TextField  fullWidth placeholder='Name' type=\"text\" name=\"placeName\" value={this.state.placeName} onChange={this.handleChange} />\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Create Host Place</Button>\n\n\n                </form>\n            </div >\n        );\n    }\n}\n\nexport default HostPlace;\n{/* <TextField\n    id=\"time\"\n    label=\"Alarm clock\"\n    type=\"time\"\n    defaultValue=\"07:30\"\n    className={classes.textField}\n    InputLabelProps={{\n        shrink: true,\n    }}\n    inputProps={{\n        step: 300, // 5 min\n    }}\n/> */}","import React, { Component } from 'react';\nimport HostPlaceCards from './HostPlaceCards';\nimport HostPlaceForm from './HostPlaceForm'\nimport HostPlaceService from '../../services/host-service';\nimport { TextField } from '@material-ui/core';\nclass HostPlace extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: null,\n            listOfPlaces: null,\n            listCopy: null,\n            queryDate: '',\n            queryCity: \"\"\n        }\n        this.service = new HostPlaceService()\n    }\n\n    componentDidMount() {\n        this.getAllPlaces();\n        this.getOnePlace(this.props.user._id);\n        this.setState({\n            user: this.props.user\n        })\n    }\n    getAllPlaces = () => {\n        this.service.getAll()\n            .then((response) => {\n                this.setState({\n                    listOfPlaces: response.hostPlace,\n                    listCopy: response.hostPlace\n                })\n            })\n            .catch((e) => console.log(e))\n    }\n    getOnePlace = (hostId) => {\n        this.service.getOne(hostId)\n            .then((response) => {\n                console.log(response);\n                this.setState({\n                    myPlace: response.hostPlace\n                })\n            })\n    }\n\n    // onChange = (e) => {\n    //     const { name, value } = e.target;\n    //     this.setState({ [name]: value });\n    // }\n    filterDate = (e) => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n        const filtered = [...this.state.listOfPlaces]\n        // // const filteredList = []\n        const filteredList = filtered.filter(place => { return place.date.includes(e.target.value) || place.address.includes(e.target.value) })\n        this.setState({\n            listCopy: filteredList\n        })\n    }\n    filterCity = (e) => {\n        e.preventDefault()\n        this.state.listCopy = this.state.listOfPlaces\n        const { listCopy, queryCity } = this.state\n        // const filteredList = []\n\n        const filteredList = listCopy.filter(place => { return place.address.includes(queryCity) })\n        // console.log(filteredList, 'filteredList');\n\n        this.setState({\n            listCopy: filteredList\n        })\n    }\n    render() {\n        return (\n            <>\n                {this.props.user.musician &&\n                    <>\n                        <h1>Search by...</h1>\n                        <form>\n                            <TextField name='queryDate' value={this.state.queryDate} type='date' onChange={this.filterDate} label='Date' InputLabelProps={{\n                                shrink: true,\n                            }} />\n\n                            <TextField value={this.state.queryCity} name='queryCity' type='text' onChange={this.filterDate} placeholder='City' />\n                            {/* <button onClick={this.filterDate} type='submit'>Filter</button> */}\n                        </form>\n                    </>}\n                {this.props.user.musician && <HostPlaceCards places={this.state.listCopy} user={this.props.user} />}\n                {this.props.user.host && <HostPlaceCards place={this.state.myPlace} user={this.props.user} />}\n                {this.props.user.host && <HostPlaceForm update={this.getAllPlaces} user={this.props.user} />}\n            </>\n        );\n    }\n}\n\nexport default HostPlace;","import axios from 'axios';\n\nexport default class ConcertsService {\n    constructor(props) {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/concerts`,\n            withCredentials: true\n        });\n    }\n    new = (hostplaceID, musiciainID) => {\n        return this.service.post(`/new/${hostplaceID}/${musiciainID}`)\n            .then(response => response.data)\n    }\n    setCapacity = (capacity) => {\n        return this.service.post(\"/set-capacity\", { capacity })\n            .then(response => response.data)\n    }\n\n    going = (concertID, capacity) => {\n        return this.service.post(`/${concertID}/going`)\n            .then(response => response.data)\n    }\n\n    notGoing = (concertID, capacity) => {\n        return this.service.post(`/${concertID}/not-going`)\n            .then(response => response.data)\n    }\n    getOne = (concertID) => {\n        return this.service.get(`/${concertID}`, {})\n            .then(response => response.data)\n    }\n    getAll = () => {\n        return this.service.get(`/all`, {})\n            .then(response => response.data)\n    }\n    delete = (concertID) => {\n        return this.service.get(`/${concertID}/delete`, {})\n            .then(response => response.data)\n    }\n}","import React, { Component } from 'react'\n\nexport default class SearchMap extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            city: ''\n        }\n    }\n  render() {\n    return (\n      <form>\n        <label>Ciudad</label>\n        <input onChange={(e)=>this.props.filter(e)}/>\n      </form>\n    )\n  }\n}\n","import ReactMapboxGl, { Layer, Feature, Popup } from \"react-mapbox-gl\";\nimport React, { Component } from \"react\";\nimport ConcertService from \"../../services/concerts-service\";\nimport SearchMap from \"../SearchMap/SearchMap\"\nimport styled from 'styled-components';\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    \"pk.eyJ1IjoiZGRpZXpyIiwiYSI6ImNqb3ZuMGZ3cjFqa2YzcWxrYjBtNjJzaG4ifQ.cCFZkl39Hov3D-Ujeq74Cg\"\n});\nconst Zoom = [10];\nconst mapStyle = { height: \"100vh\", width: \"100vw\", display: \"flex\" };\nconst styles = { dark: \"mapbox://styles/mapbox/dark-v9\" };\nconst center = [-3.70379, 40.416775];\n\nconst StyledPopup = styled.div`\n  background: white;\n  color: #3f618c;\n  font-weight: 400;\n  padding: 5px;\n  border-radius: 2px;\n`;\n\nexport default class Mapbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allConcerts: null,\n      filteredConcerts:[],\n      concert:null,\n    };\n    this.service = new ConcertService();\n  }\n\n  filterConcerts = (e)=>{\n    console.log(e.target.value,'---------------');\n    const filtered = [...this.state.allConcerts];\n    let newfiltered = filtered.filter((concert)=>{\n       return concert.hostID.address.includes(e.target.value);\n    })\n    this.setState({filteredConcerts:newfiltered});\n\n  }\n\n  componentDidMount() {\n    this.service\n      .getAll()\n      .then(response => {\n        console.log(response);\n        this.setState(\n          {\n            allConcerts: [...response]\n          }\n        );\n      })\n      .catch(e => console.log(e));\n  }\n\n \n markerClick = (concert, feature) => {\n     console.log(concert,\"DENTRO DE MARKER CLICK\")\n  this.setState({\n    // center: feature.geometry.coordinates,\n    // zoom: [14],\n    concert\n  });\n};\nonClickGoingConcert = (e)=>{\n    this.service\n    .going(this.state.concert._id)\n    .then(response => {\n      console.log(response.concert);\n      this.setState(\n        {\n          concert: response.concert\n        }\n      );\n    })\n    .catch(e => console.log(e));\n    \n}\nonClickNotGoingConcert = (e)=>{\n    this.service\n    .notGoing(this.state.concert._id)\n    .then(response => {\n      console.log(response.concert);\n      this.setState(\n        {\n          concert: response.concert\n        }\n      );\n    })\n    .catch(e => console.log(e));\n    \n}\n\n  render() {\n    const { concert } = this.state;\n    // console.log(concert); \n    if (this.state.allConcerts || this.state.filteredConcerts) {\n      return (\n        <>  \n         <SearchMap filter={this.filterConcerts}/>\n        <Map\n          style={styles.dark}\n          zoom={Zoom}\n          containerStyle={mapStyle}\n          center={center}\n        >\n        <Layer\n        type=\"symbol\"\n        id=\"marker\"\n        layout={{ \"icon-image\": \"marker-15\" }}\n        >\n            {this.state.filteredConcerts.map(concert => {\n              return (\n                <Feature\n                  key={concert}\n                  coordinates={[\n                    concert.hostID.location.longitude,\n                    concert.hostID.location.latitude\n                  ]}\n                //   onClick={e => this.onClickCircle(e, concert)}\n                onClick={this.markerClick.bind(this, concert)}\n                />\n              );\n            })}\n          </Layer>\n          {concert!==null && (\n            <Popup key={concert.availability} coordinates={[\n              concert.hostID.location.longitude,\n              concert.hostID.location.latitude\n              \n            ]}>\n              <StyledPopup>\n                <div>\n                <h1>Concert Place in {concert.hostID.placeName}</h1>\n                <p>Capacidad:{concert.capacity}</p>\n                <p>{concert.hostID.price}</p>\n                <p>{concert.hostID.address}</p>\n                <p>{concert.hostID.date}</p>\n                <p>{concert.hostID.finishingTime}</p>\n                <p>{concert.hostID.initialTime}</p>\n                </div>\n                <div>\n                <h1>{concert.musicianID.artistData}</h1>\n                <a href={concert.musicianID.musicTrack}>Music Track</a>\n                <img src={concert.musicianID.image}/>\n                <p>{concert.musicianID.artistData}</p>\n                <p>{concert.musicianID.instruments[0]}</p>\n                </div>\n                <div>\n                    <button className=\"btn-go-concert\" onClick={this.onClickGoingConcert} >+</button>\n                    <button className=\"btn-go-concert\" onClick={this.onClickNotGoingConcert} >-</button>\n                </div>\n              </StyledPopup>\n            </Popup>\n          )}\n        </Map>\n        </>\n      );\n    } else {\n      return <p>Loading map...</p>;\n    }\n  }\n}\n","import axios from 'axios';\nexport default class MusicianService {\n  constructor(props) {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/musician`,\n      withCredentials: true\n    });\n  }\n  new = (NEW) => {\n    const formData = new FormData();\n    Object.keys(NEW).forEach(key => formData.append(key, NEW[key]))\n    return this.service.post(\"/new\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => response.data);\n  }\n  addPicture(file) {\n    const formData = new FormData();\n    formData.append(\"image\", file)\n    return this.service.post(\"/new\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => response.data)\n  }\n\n  edit = (musicianID, artistData, email, originCity, musicStyle, artistDescription, instruments, favouritePlayCity, musicTrack, spotifyAccount, youtubeAccount, image) => {\n    return this.service.post(`/${musicianID}/edit`, {\n      artistData,\n      email,\n      originCity,\n      musicStyle,\n      artistDescription,\n      instruments,\n      favouritePlayCity,\n      musicTrack,\n      spotifyAccount,\n      youtubeAccount,\n      image,\n    })\n      .then(response => response.data);\n  }\n  delete = (musicianID) => {\n    return this.service.get(`/${musicianID}/delete`, {})\n      .then(response => response.data)\n  }\n  getOne = (musicianID) => {\n    return this.service.get(`/${musicianID}`, {})\n      .then(response => response.data)\n  }\n  getAll = () => {\n    return this.service.get('/all')\n      .then(response => response.data)\n  }\n}","import React, { Component } from 'react';\nimport MusicianService from '../../services/musician-service';\nimport { Grid, TextField, Button, } from '@material-ui/core';\n\nexport default class MusicianForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            artistData: \"\",\n            email: \"\",\n            originCity: \"\",\n            musicStyle: \"\",\n            artistDescription: \"\",\n            instruments: \"\",\n            favouritePlayCity: \"\",\n            musicTrack: \"\",\n            spotifyAccount: \"\",\n            youtubeAccount: \"\",\n            image: \"\",\n            file: null,\n            redirect: false\n        }\n        this.service = new MusicianService();\n    }\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const { artistData, email, originCity, musicStyle, artistDescription, instruments, favouritePlayCity, musicTrack, spotifyAccount, youtubeAccount, image, file } = this.state\n        console.log(file)\n        this.service.new({ artistData, email, originCity, musicStyle, artistDescription, instruments, favouritePlayCity, musicTrack, spotifyAccount, youtubeAccount, image, file })\n            .then(response => {\n                this.setState({\n                    artistData: \"\",\n                    email: \"\",\n                    originCity: \"\",\n                    musicStyle: \"\",\n                    artistDescription: \"\",\n                    instruments: \"\",\n                    favouritePlayCity: \"\",\n                    musicTrack: \"\",\n                    spotifyAccount: \"\",\n                    youtubeAccount: \"\",\n                    image: \"\",\n                    file: null,\n                    redirect: true\n                }, () => {\n                    this.props.update()\n                })\n            })\n            .catch(e => console.log(e))\n\n    }\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        })\n    }\n    handleChangeImage = (e) => {\n        this.setState({\n            file: e.target.files[0]\n        })\n        console.log(e.target.files[0]);\n    }\n    render() {\n        return (\n            <div>\n                <h1>Musician's Information</h1>\n                <form onSubmit={this.handleFormSubmit}>\n                    <Grid>\n                        <Grid item>\n                            <TextField placeholder='Artist Name' text='text' name='artistData' value={this.state.artistData} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Home City' text='text' name='originCity' value={this.state.originCity} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Music Style' text='text' name='musicStyle' value={this.state.musicStyle} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Tell us About You' text='text' name='artistDescription' value={this.state.artistDescription} onChange={this.handleChange} multiline\n                                rowsMax=\"6\" />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Instruments' text='text' name='instruments' value={this.state.instruments} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Favourite City to Play' text='text' name='favouritePlayCity' value={this.state.favouritePlayCity} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Music Track' text='text' name='musicTrack' value={this.state.musicTrack} onChange={this.handleChange} />\n                        </Grid>\n                        <h3>Optional</h3>\n                        <Grid item>\n                            <TextField placeholder='Spotify Account' text='text' name='spotifyAccount' value={this.state.spotifyAccount} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Youtube Account' text='text' name='youtubeAccount' value={this.state.youtubeAccount} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <input type=\"file\" name=\"image\" onChange={this.handleChangeImage} />\n                        </Grid>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Save</Button>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport MusicianService from '../../services/musician-service';\nimport { Card, CardContent, Typography, CardActions, IconButton, Collapse } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nexport default class MusicianCards extends Component {\n    constructor() {\n        super()\n        this.state = {\n            expanded: false\n        }\n        this.service = new MusicianService();\n    }\n\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n    handleDelete = (res) => {\n        // console.log(response)\n        this.service.delete(res)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n    render() {\n        const listOfMusicians = this.props.musician || [];\n        return (\n            <>\n                {/* <div style={{ display: \"flex\", flexDirection: \"row\", flexFlow: \"wrap\" }}> */}\n                {listOfMusicians.map((musician, i) => {\n                    return (\n                        <>\n                            <Card className=\"musician-cards\" key={i}>\n                                <CardContent>\n                                    <Typography component=\"h3\" variant=\"h3\">\n                                        {musician.artistData}\n                                    </Typography>\n                                    <Typography component=\"h5\" variant=\"h5\">\n                                        {musician.artistDescription}\n                                    </Typography>\n                                    <Typography component=\"h6\" variant=\"h6\">\n                                        <img src={musician.image} className=\"musician-image\" />\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <IconButton\n                                        className=\"dropdown-button\"\n                                        onClick={e => this.handleExpandClick(e)}\n                                        aria-label=\"Show more\"\n                                    >\n                                        <ExpandMoreIcon className=\"dropdown-button\" />\n                                    </IconButton>\n                                </CardActions>\n                                <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n                                    <CardContent>\n                                        <Typography component=\"h5\" variant=\"h5\" align=\"center\">About {musician.artistData}</Typography>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            <span>Music styles: </span>\n                                            {musician.musicStyle}\n                                        </Typography>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            <span>Instruments: </span>\n                                            {musician.instruments}\n                                        </Typography>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            <span>Home city: </span>\n                                            {musician.originCity}\n                                        </Typography>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            <span>Favoutite Place to Play: </span>\n                                            {musician.favouritePlayCity}\n                                        </Typography>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            <a href={musician.musicTrack} target=\"_blank\"> Music Track</a>\n                                        </Typography>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            <a href={musician.spotifyAccount} target=\"_blank\"> Spotify Account</a>\n                                        </Typography>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            <a href={musician.youtubeAccount} target=\"_blank\"> Youtube Account</a>\n                                        </Typography>\n                                    </CardContent>\n                                </Collapse>\n                            </Card>\n                            {/* < button type=\"submit\" onClick={() => this.handleDelete(musician._id)}>Delete</button> */}\n                        </>\n                    )\n                })}\n                {/* </div> */}\n            </>\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport MusicianForm from './MusicianForm';\nimport MusicianCards from './MusicianCards';\nimport \"./Musician.css\"\nimport HostPlaceCards from '../HostPlace/HostPlaceCards';\nimport MusicianService from '../../services/musician-service';\n\n\nexport default class Musician extends Component {\n    constructor(prop) {\n        super(prop)\n        this.state = {\n            user: null\n        }\n        this.service = new MusicianService\n    }\n\n    componentDidMount() {\n        this.update();\n        this.setState({\n            user: this.props.user\n        })\n    }\n    update = () => {\n        this.service.getAll()\n            .then((response) => {\n                // console.log(response.musician)\n                this.setState({\n                    listOfMusicians: response.musician\n                })\n            })\n            .catch((e) => console.log(e))\n    }\n    render() {\n        return (\n            <div>\n                {/* <HostPlaceCards></HostPlaceCards> */}\n                <MusicianCards musician={this.state.listOfMusicians} />\n                {this.props.user.musician && <MusicianForm update={this.update} />}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport AuthService from '../../services/auth-service';\nimport { Grid, TextField, FormControlLabel, Switch, Button } from '@material-ui/core';\n\nexport default class EditProfile extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            email: \"\",\n            host: \"\",\n            musician: \"\",\n        }\n        this.service = new AuthService()\n    }\n    handleChange = (e) => {\n        const { name, value, checked } = e.target;\n        if (name === \"host\" || name === \"musician\") {\n            this.setState({ [name]: checked });\n        } else {\n            this.setState({ [name]: value });\n        }\n    }\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n        const { username, password, email, host, musician } = this.state;\n        this.service.edit(username, password, email, host, musician)\n            .then(response => {\n                console.log(response);\n                // this.setState({ username: \"\", password: \"\", email: \"\", host: \"\", musician: \"\", redirect: true });\n            })\n            .catch(error => console.log(error))\n    }\n    render() {\n        return (\n            <div>\n                <h1>Edit your Profile</h1>\n                <form onSubmit={this.handleFormSubmit}>\n                    <Grid>\n                        <Grid item>\n                            <TextField placeholder='Change your Username' text='text' name='username' value={this.state.username} onChange={this.handleChange} />\n                        </Grid>\n                        <Grid item>\n                            <TextField placeholder='Change your Email' text='email' name='email' value={this.state.email} onChange={this.handleChange} />\n                        </Grid>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    onChange={this.handleChange}\n                                    value={this.state.host}\n                                    checked={this.state.host}\n                                    color=\"primary\"\n                                    name=\"host\"\n                                />\n                            }\n                            label=\"Do you wanna Host?\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    onChange={this.handleChange}\n                                    value={this.state.musician}\n                                    checked={this.state.musician}\n                                    color=\"primary\"\n                                    name=\"musician\"\n                                />\n                            }\n                            label=\"Are you musician?\"\n                        />\n                    </Grid>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">Edit</Button>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport RequestService from '../../services/request-service';\nimport ConcertService from '../../services/concerts-service';\n\nclass RequestsCards extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            requestID: {}\n        }\n        this.concertService = new ConcertService();\n        this.requestService = new RequestService();\n        // console.log(this.props.request, \"DENTRO DE LA CARD\");\n    }\n\n    componentDidMount = () => {\n        this.setState({ user: this.props.user })\n\n    }\n    onClickCreateConcert = (hostplaceId, musicianId, requestID) => {\n\n        this.concertService.new(hostplaceId, musicianId)\n            .then((concertCreated) => {\n                console.log(concertCreated);\n            })\n            .catch((e) => {\n                console.log(e);\n            })\n        this.requestService.delete(requestID)\n            .then(requestID => console.log(requestID))\n            .catch(err => console.log(err))\n    }\n    handleDeleteRequests = (requestID) => {\n\n        this.requestService.delete(requestID)\n            .then(requestID => console.log(requestID))\n            .catch(err => console.log(err))\n    }\n    render() {\n\n        const musicianID = this.props.request.musicianID\n        const { user, request } = this.props\n        return (\n            <div>\n                <p>{musicianID.artistData} wants to play at yout nice Place!</p>\n                <p>{musicianID.artistData}</p>\n                <p>{musicianID.favouritePlayCity}</p>\n                <p>{musicianID.instruments}</p>\n                <p>{musicianID.musicStyle}</p>\n                <button type=\"submit\" onClick={() => this.onClickCreateConcert(user.hostPlaceID, musicianID._id, request._id)}>Accept Request</button>\n                <button type=\"submit\" onClick={() => this.handleDeleteRequests(request._id)}>Deny Request</button>\n            </div>\n        );\n    }\n}\n\nexport default RequestsCards;\n","import React, { Component } from \"react\";\nimport RequestsCards from \"./RequestsCards\";\nimport RequestService from \"../../services/request-service\";\n\nclass Requests extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      listOfRequests: []\n    };\n    this.service = new RequestService();\n  }\n  componentDidMount = () => {\n    this.setState({ user: this.props.user });\n    this.getAll(this.props.user._id);\n  };\n\n  getAll = hostId => {\n    this.service.getAll(hostId).then(requests => {\n      // console.log(requests.myrequests.concertRequest,'requests');\n\n      if (requests.myrequests) {\n        const listOfRequestsIds = requests.myrequests.concertRequest;\n        // console.log(listOfRequestsIds);\n        const requestList = [];\n        listOfRequestsIds.forEach((request) => {\n          this.service.getOne(request._id)\n            .then(request => {\n              requestList.push(request.request);\n              this.setState({ listOfRequests: requestList })\n              console.log(requestList);\n            })\n        })\n        // console.log(requestList);\n\n      } else {\n        alert(\"Este host no tiene requests limpiar codifgo\");\n      }\n\n    });\n  };\n\n  render() {\n    const listOfRequests = this.state.listOfRequests;\n    return (\n      <>\n        {listOfRequests.map((request, i) => { return (<RequestsCards key={i} request={request} user={this.props.user} />) })}\n      </>\n    );\n  }\n}\n\nexport default Requests;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { Route, Switch } from 'react-router-dom';\nimport Profile from '../Profile/Profile';\nimport AuthService from '../../services/auth-service';\nimport HostPlace from '../HostPlace/HostPlace';\nimport Mapbox from '../Mapbox/Mapbox';\nimport Musician from '../Musician/Musician';\nimport EditProfile from '../Profile/EditProfile';\nimport Requests from '../Requests/Requests'\nimport './Navbar.css'\n\nclass Navbar extends Component {\n    constructor() {\n        super()\n        this.authService = new AuthService();\n        this.state = {\n            user: null\n        }\n    }\n    logout = () => {\n        this.authService\n            .logout()\n            .then(() => this.setState({ user: null }));\n    }\n    render() {\n        // console.log(this.props.user);\n        return (\n            <>\n                <AppBar position=\"static\">\n                    <Toolbar className=\"nav-bar-guay\">\n                        <span color=\"black\">\n                            SERENDIPITY\n                        </span>\n                        {(this.props.user.musician || this.props.user.host) ?\n                            <>\n                                <Link to='/musicians'>\n                                    <Button>Musicians</Button>\n                                </Link>\n                                <Link to=\"/host-places\">\n                                    <Button>Hosts</Button>\n                                </Link>\n                            </>\n                            : null\n                        }\n                        {(this.props.user.host) ?\n                            <>\n                                <Link to='/requests'>\n                                    <Button>Requests</Button>\n                                </Link>\n                            </> : null}\n                        <Link to='/concerts'>\n                            <Button>Concerts</Button>\n                        </Link>\n                        <Link to=\"/your-concerts\">\n                            <Button>Your Concerts</Button>\n                        </Link>\n                        <Link to='/about'>\n                            <Button>About</Button>\n                        </Link>\n                        <Link to='/profile'>\n                            <Button>Profile</Button>\n                        </Link>\n                        <Link to='/register'>\n                            <Button onClick={this.logout}>Logout</Button>\n                        </Link>\n                    </Toolbar>\n                </AppBar>\n                <Route exact path=\"/about\" render={() => <Profile routename='about' />} />\n                <Route exact path=\"/profile\" render={() => <Profile user={this.props.user} routename='profile' />} />\n                <Route exact path=\"/host-places\" render={() => <HostPlace user={this.props.user} />} />\n                <Route exact path=\"/concerts\" render={() => <Mapbox />} />\n                <Route exact path=\"/requests\" render={() => <Requests user={this.props.user} />} />\n                <Route exact path='/musicians' render={() => <Musician user={this.props.user} routename='musician' />} />\n                <Route exact path='/edit-profile' component={EditProfile} />\n            </>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react'\nimport IsLoggedIn from '../../containers/IsLoggedIn';\nimport AuthService from '../../services/auth-service';\nimport Navbar from '../Navbar/Navbar';\n\n\nexport default class Home extends Component {\n  constructor() {\n    super()\n    this.authService = new AuthService();\n    this.state = {\n      user: null\n    }\n  }\n  logout = () => {\n    this.authService\n      .logout()\n      .then(() => this.setState({ user: null }));\n  }\n  \n  render() {\n\n    return (\n      <IsLoggedIn>\n        {(user) => {\n          // const username = user && user.username;\n          return (\n            <>\n              <Navbar user={user}></Navbar>\n            </>\n          );\n        }}\n      </IsLoggedIn>\n    )\n  }\n}","import React, { Component } from 'react'\nimport AuthService from '../../services/auth-service'\nimport { Redirect } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '', password: '', email: '', host: false, musician: false, redirect: false\n    }\n    this.service = new AuthService();\n  }\n\n\n    handleFormSubmit = (event) => {\n        console.log(event);\n        event.preventDefault();\n        const {username,password,email,host,musician} = this.state;\n        this.service.signup(username,password,email,host,musician)\n        .then( response => {\n            console.log(response);\n            this.setState({username: \"\", password: \"\",email: \"\",host:false,musician:false,redirect:true});\n        })\n        .catch( error => console.log(error) )\n    }\n\n  handleChange = (e) => {\n    const { name, value, checked } = e.target;\n    if (name === \"host\" || name === \"musician\") {\n      this.setState({ [name]: checked });\n    } else {\n      this.setState({ [name]: value });\n    }\n    console.log(this.state)\n  }\n\n\n  render() {\n    if (this.state && this.state.redirect) { return <Redirect to=\"/\" /> }\n\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <Grid direction='column' spacing={16} container alignItems='center'justify-content='center' >\n          <Grid item>\n            <TextField  placeholder='Name' type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n          </Grid>\n          <Grid item>\n            <TextField placeholder='password' type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n          </Grid>\n          <Grid item>\n            <TextField placeholder='email' type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n          </Grid>\n          </Grid> \n          <Grid direction='column' spacing={16} container alignItems='center'justify-content='center' >\n          <FormControlLabel\n            control={\n              <Switch\n                onChange={this.handleChange}\n                value={this.state.host}\n                checked={this.state.host}\n                color=\"primary\"\n                name=\"host\"\n              />\n            }\n            label=\"Do you wanna Host?\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                onChange={this.handleChange}\n                value={this.state.musician}\n                checked={this.state.musician}\n                color=\"primary\"\n                name=\"musician\"\n              />\n            }\n            label=\"Are you musician?\"\n          />\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\">SIGNUP</Button>\n          </Grid>\n        </Grid>\n      </form>\n    )\n  }\n}","import React, { Component } from 'react';\nimport AuthService from '../../services/auth-service';\nimport { Link, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\n\n/* const Button = styled.button`\n    background-color: papayawhip;\n    min-height: 32px;\n    padding: 8px 16px;\n    border-radius: 3px;\n`;\n */\nexport default class Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' ,redirect:false};\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const {username,password} = this.state;\n\n    this.service.login(username, password)\n    .then( response => {\n        this.setState({ username: \"\", password: \"\" ,redirect:true});\n    })\n    .catch( error => console.log(error) )\n  }\n    \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n    \n  render(){\n    if(this.state && this.state.redirect){return <Redirect to =\"/\"/>}\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n        <Grid direction='column' spacing={16} container \n        alignItems=\"center\" >\n        <Grid  item xs={12}>\n          <TextField placeholder='Name' type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n        </Grid>\n        <Grid item>\n          <TextField placeholder='password' type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n        </Grid>\n        <Grid item>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Login\">LOGIN</Button>\n        </Grid>\n        </Grid>\n        </form>\n      </div>\n    )\n  }\n}","import Signup from \"../components/Signup/Signup\";\nimport Login from \"../components/Login/Login\";\nimport React, { Component } from \"react\";\nimport logo from'../images/logo.png';\nimport \"./Register.css\";\n\nexport default class Register extends Component {\n  render() {\n    return (\n      <div>\n        <img src={logo} alt=\"\"/>\n        <h1>Serendipity</h1>\n        <div className=\"register-container\">\n          <div className=\"login-box\">\n            <h3>LOGIN</h3>\n            <Login />\n          </div>\n          <div className=\"signup-box\">\n            <h3>SIGNUP</h3>\n            <Signup />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/Home/Home';\nimport Register from './containers/Register';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/register\" render={() => <Register />} />\n          <Route path=\"/\" render={() => <Home />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render((\n  <Router>\n      <App />\n  </Router>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}